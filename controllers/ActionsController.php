<?php

namespace app\controllers;

use app\models\Actions;
use app\models\Addresses;
use app\models\Agents;
use app\models\ControlParsing;
use app\models\Methods;
use app\models\MyArrayHelpers;
use app\models\Renders;
use app\models\Sale;
use app\models\SaleSimilar;
use app\models\Synchronization;
use app\models\Tags;
use Yii;
use yii\web\Controller;
use app\models\SaleFilters;

/**
 * OrdersController implements the CRUD actions for Orders model.
 */
class ActionsController extends Controller
{

    public function beforeAction($action)
    {
        $this->enableCsrfValidation = false;
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }


    const AttributeAndModels = [

    ];

    public function actionRemove($id_parent, $id_model, $id_attr, $id)
    {
        return Actions::Remove($id_parent, $id_model, $id_attr, $id);


    }

    public function actionAdd($id_parent, $id_model, $id_attr, $id)
    {
        return Actions::Add($id_parent, $id_model, $id_attr, $id);


    }

    public function actionToggle($id_parent, $id_model, $id_attr, $id)
    {
        return Actions::Toggle($id_parent, $id_model, $id_attr, $id);


    }

    public function actionChangeStatus($id_parent, $id_model, $id_attr, $id_status)
    {
        return Actions::ChangeStatus($id_parent, $id_model, $id_attr, $id_status);
    }
    public function actionAction($id_parent, $id_model, $id_action)
    {
        return Actions::Action($id_parent, $id_model, $id_action);
    }

    public function actionText()
    {
        return $this->render('index');

    }

    public function actionJson($url) {

        return $url." is bot";
    }
    public function actionVk() {

        return "7993a609";
    }

}